/* 중요!
  css 코드가 길어지면 선택자 찾기가 어려움
  따라서 모든 css 코드는 html 구조에 맞춰 작성하는게 좋음
*/

body {
  background-image: url("../images/bg.jpg");
  /* 확대/축소 해도 배경 전체를 이미지가 다 덮도록하고 반복도 없애기 */
  height: 100vh;
  background-repeat: no-repeat;
  background-size: cover;
}

.container {
  padding: 50px 0;
}

.container .heroes {
  display: flex;
  flex-wrap: wrap;
  /* background-color: orange; */
  justify-content: center;
  /* width: 700px; */
  max-width: 700px;
  margin: 0 auto;
  padding: 40px 20px;
}

.container .heroes .hero {
  width: 80px;
  height: 84px;
  margin: 4px;
  background-color: #555;
  border: 3px solid #fff;
  border-radius: 10px;
  transform: skewX(-14deg);
  /* border 사용으로 요소의 크기가 커지는 것을 방지 */
  box-sizing: border-box;
  transition: transform 0.1s, background-color 0.6s;
  /* 이미지가 영역을 넘치니까 잘라내줘야함 */
  overflow: hidden;
}

.container .heroes .hero .img {
  width: 140%;
  height: 100%;
  background-position: center;
  /* background-size: cover; */
  background-size: 90px;
  /* 이미지가 반복되므로 이거 꼭 없애야함 */
  background-repeat: no-repeat;
  /* 기울어진 요소에 이미지를 넣으니 이미지도 기울어짐 -> 풀어줘야댐 */
  transform: skewX(14deg) translateX(-16px);
}

.container .heroes .hero:nth-child(1) .img { background-image: url("../images/hero1.png"); }
.container .heroes .hero:nth-child(2) .img { background-image: url("../images/hero2.png"); }
.container .heroes .hero:nth-child(3) .img { background-image: url("../images/hero3.png"); }
.container .heroes .hero:nth-child(4) .img { background-image: url("../images/hero4.png"); }
.container .heroes .hero:nth-child(5) .img { background-image: url("../images/hero5.png"); }
.container .heroes .hero:nth-child(6) .img { background-image: url("../images/hero6.png"); }
.container .heroes .hero:nth-child(7) .img { background-image: url("../images/hero7.png"); }
.container .heroes .hero:nth-child(8) .img { background-image: url("../images/hero8.png"); }
.container .heroes .hero:nth-child(9) .img { background-image: url("../images/hero9.png"); }
.container .heroes .hero:nth-child(10) .img { background-image: url("../images/hero10.png"); }

.container .heroes .hero:nth-child(11) .img { background-image: url("../images/hero11.png"); }
.container .heroes .hero:nth-child(12) .img { background-image: url("../images/hero12.png"); }
.container .heroes .hero:nth-child(13) .img { background-image: url("../images/hero13.png"); }
.container .heroes .hero:nth-child(14) .img { background-image: url("../images/hero14.png"); }
.container .heroes .hero:nth-child(15) .img { background-image: url("../images/hero15.png"); }
.container .heroes .hero:nth-child(16) .img { background-image: url("../images/hero16.png"); }
.container .heroes .hero:nth-child(17) .img { background-image: url("../images/hero17.png"); }
.container .heroes .hero:nth-child(18) .img { background-image: url("../images/hero18.png"); }
.container .heroes .hero:nth-child(19) .img { background-image: url("../images/hero19.png"); }
.container .heroes .hero:nth-child(20) .img { background-image: url("../images/hero20.png"); }

.container .heroes .hero:nth-child(21) .img { background-image: url("../images/hero21.png"); }
.container .heroes .hero:nth-child(22) .img { background-image: url("../images/hero22.png"); }
.container .heroes .hero:nth-child(23) .img { background-image: url("../images/hero23.png"); }
.container .heroes .hero:nth-child(24) .img { background-image: url("../images/hero24.png"); }
.container .heroes .hero:nth-child(25) .img { background-image: url("../images/hero25.png"); }
.container .heroes .hero:nth-child(26) .img { background-image: url("../images/hero26.png"); }
.container .heroes .hero:nth-child(27) .img { background-image: url("../images/hero27.png"); }
.container .heroes .hero:nth-child(28) .img { background-image: url("../images/hero28.png"); }
.container .heroes .hero:nth-child(29) .img { background-image: url("../images/hero29.png"); }
.container .heroes .hero:nth-child(30) .img { background-image: url("../images/hero30.png"); }

.container .heroes .hero:nth-child(31) .img { background-image: url("../images/hero31.png"); }
.container .heroes .hero:nth-child(32) .img { background-image: url("../images/hero32.png"); }

/* quiz: 마우스 올렸을 때 배경색(#ff9c00) */
.container .heroes .hero:hover {
  background-color: #ff9c00;
  /* transform: scale(1.5) <- 이렇게 쓰면
    hover 되면 위에서 넣었던 transform 이 풀려버리므로 여기서도 추가해줘야댐
  */
  transform: scale(1.5) skewX(-14deg);
  /* 다음 형제보다 위에 쌓일 수 있도록 z-index 추가 */
  /* 중요:
    z-index 를 사용하려면 (1) position 속성의 값(!static)이 같이 있거나,
    (2) Flex Item 끼리에 사용이 가능함
    여기서는 flex-item 이므로 사용 가능합니다
  */
  z-index: 1;
}

.container .logo {
  /* 부모 영역은 최대 300px 로 제한 */
  max-width: 300px;
  margin: 0 auto;
  padding: 0 20px;
}

.container .logo img {
  /* 부모 영역의 100% 로 설정해서 애도 최대 300px 로 제한 */
  width: 100%;
}